- id: "1710706561310"
  alias: "Alarm: Wake-up light alarm with sunrise effect"
  description: ""
  condition:
      and:
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: "off"
      - condition: state
        entity_id: input_boolean.alarm_clock
        state: "on"
  use_blueprint:
    path: sbyx/wake-up-light-alarm-with-sunrise-effect.yaml
    input:
      manual_time: "{{ states('input_datetime.wake_up_light_start_time')[1:] }}"
      light_entity: light.bedroom_lamp

- alias: "Alarm clock: Charging time"
  trigger:
    platform: time
    at: input_datetime.wake_up_light_start_time
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: "on"
    - condition: state
      entity_id: input_boolean.vacation_mode
      state: "off"
  action:
    - service: switch.turn_on
      entity_id: switch.smart_plug


- alias: "Alarm clock: Changes"
  id: "alarm_clock_changes"
  trigger:
    - platform: state
      entity_id: input_datetime.alarm_clock
    - platform: homeassistant
      event: start # in case the states aren't properly restored
  variables:
    alarm_clock: "{{ states('input_datetime.alarm_clock') }}"
  action:
    sequence:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.wake_up_light_start_time
        data:
          time:  >-
            {% set t_alarm =  strptime(states("input_datetime.alarm_clock"), '%H:%M:%S') %}
            {% set t_start = as_timestamp(now().replace(hour=t_alarm.hour).replace(minute=t_alarm.minute).replace(second=t_alarm.second)) %}
            {% set before_alarm = t_start - 15 * 60 %}
            {{ before_alarm | timestamp_custom("%H:%M:%S", True) }}
