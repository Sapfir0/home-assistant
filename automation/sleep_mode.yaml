- alias: "Sleep mode: Set wind down"
  id: "sleep_mode_set_wind_down"
  trigger:
    platform: time
    at: input_datetime.wind_down
  action:
    - service: input_select.select_option
      entity_id: input_select.sleep_mode
      data:
        option: "wind_down"

- alias: "Sleep mode: Lights"
  id: "sleep_mode_changes"
  trigger:
    - platform: state
      entity_id: input_select.sleep_mode
    - platform: homeassistant
      event: start # in case the states aren't properly restored
  variables:
    sleep_mode: "{{ states('input_select.sleep_mode') }}"
  action:
    choose:
      - conditions: "{{ sleep_mode == 'on' }}"
        sequence:
          - service: light.turn_off
            entity_id: light.bedroom_lamp
          - service: switch.turn_off
            entity_id: switch.smart_plug

- alias: "Sleep mode: go to sleep"
  id: "sleep_mode_start"
  trigger:
   - platform: event
     event_type: yandex_speaker
     event_data:
      value: ничего не делай # ключевое слово, которое мы будем прокидывать из яндекс дома, отправляем бесшумно
  action:
    sequence:
      - service: yandex_station.send_command
        data:
          entity_id: media_player.yandex_station
          text: какая погода?
          response_variable: response
      - service: input_select.select_option
        entity_id: input_select.sleep_mode
        data:
          option: "on"



